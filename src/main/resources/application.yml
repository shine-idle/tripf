server:
  error:
    include-message: always
    include-stacktrace: always

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: '4'
    username: ${DB_USER}
    url: ${DB_URL}
    password: ${DB_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH2_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH2_SECRET}
            scope: # 기본 값 openid,profile,email => profile, email 로 설정 변경
              - profile
              - email

          naver:
            client-id: ${NAVER_OAUTH2_CLIENT_ID}
            client-secret: ${NAVER_OAUTH2_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            #            scope:
            #              - name
            #              - email
            #              - profile_image
            client-name: Naver

          kakao:
            client-id: ${KAKAO_OAUTH2_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH2_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - profile_image
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정

  jpa:
    database: postgresql
    hibernate:
      ddl-auto: create

    properties:
      hibernate:
        format_sql: 'true'
        show_sql: 'true'

  servlet:
    multipart:
      resolve-lazily: true
      max-file-size: 8MB  # 파일 용량 제한
      max-request-size: 128MB # 전체 최대 크기 용량 제한

  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}
    mongodb:
      username: ${MONGO_USER}
      password: ${MONGO_PASSWORD}
      host: ${MONGO_HOST}
      port: 27017
      database: tripf
      authentication-database: admin

  mail:
    host: smtp.gmail.com
    port: 587
    username: mail.tripf@gmail.com
    password: ${MAIL_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    default-encoding: UTF-8

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false

  mvc:
    hidden-method:
      filter:
        enabled: true

jwt:
  secret: ${JWT_SECRET}
  expiry:
    access: 900000 # 15분 (15 * 60 * 1000)
    refresh: 604800000 # 7일 (7 * 24 * 60 * 60 * 1000)

google:
  api:
    key: ${GOOGLE_API_KEY}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

cloud:
  aws:
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
    s3:
      bucketName: ${S3_BUCKET_NAME}
    region:
      static: ${S3_REGION}
    stack:
      auto: false
logging:
  level:
    org.springframework.messaging: debug
    org.springframework.web.socket: debug